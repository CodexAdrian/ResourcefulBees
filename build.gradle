buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
//        maven { url='https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.32'
    }
}
plugins {
    id "org.sonarqube" version "3.1.1"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    maven { url "https://nexus.resourcefulbees.com/repository/maven-public/" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    mavenCentral()
}

version = "${mod_version}"
group = "com.resourcefulbees"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

def releasesRepoUrl = "https://nexus.resourcefulbees.com/repository/maven-releases/"
def snapshotsRepoUrl = "https://nexus.resourcefulbees.com/repository/maven-snapshots/"
def ENV = System.getenv()

sonarqube {
    properties {
        property "sonar.projectKey", "Resourceful-Bees_ResourcefulBees"
        property "sonar.organization", "resourceful-bees"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

minecraft {
    mappings channel: "official", version: "${mapping}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=resourcefulbees.mixins.json"

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'fml.earlyprogresswindow','false'

            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=resourcefulbees.mixins.json"

            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow','false'

            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            args "--mod", "resourcefulbees", "--all", "--output", "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""
            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}")

    compileOnly fg.deobf ("mcjty.theoneprobe:theoneprobe:${top_version}:api"){
        transitive = false
    }
    runtimeOnly fg.deobf ("mcjty.theoneprobe:theoneprobe:${top_version}"){
        transitive = false
    }

    compileOnly fg.deobf ("team.chisel.ctm:CTM:MC1.16.1-1.1.2.6")
    runtimeOnly fg.deobf ("team.chisel.ctm:CTM:MC1.16.1-1.1.2.6")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:${geckolib_version}")

    // If you want to test/use Mekanism & its modules during `runClient` invocation, use the following
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// core
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")// Mekanism: Additions
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")// Mekanism: Generators
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")// Mekanism: Tools
    compileOnly 'org.jetbrains:annotations:22.0.0'
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "resourcefulbees",
                "Specification-Vendor": "resourcefulbees",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"resourcefulbees",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
}

task javadocs(type: Javadoc) {
    classpath = sourceSets.main.compileClasspath
    source = sourceSets.main.java
    include "com/resourcefulbees/**"

    options.addStringOption('Xdoclint:none', '-quiet')
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

task javadocJar(type: Jar, dependsOn: javadocs) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'ResourcefulBees'
                description = 'A mod for minecraft to add own bees to minecraft through a powerful api.'
                url = 'https://github.com/Resourceful-Bees/ResourcefulBees'

                scm {
                    connection = 'git:https://github.com/Resourceful-Bees/ResourcefulBees.git'
                    developerConnection = 'git:https://github.com/Resourceful-Bees/ResourcefulBees.git'
                    url = 'https://github.com/Resourceful-Bees/ResourcefulBees/'
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://raw.githubusercontent.com/Resourceful-Bees/ResourcefulBees/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'epic428'
                        name = 'Epic_Oreo'
                        email = 'admin@resourcefulbees.com'
                    }
                    developer {
                        id = 'thatgravyboat'
                        name = 'ThatGravyBoat'
                        email = 'admin@resourcefulbees.com'
                    }
                    developer {
                        id = 'dawn_felstar'
                        name = 'Dawn Felstar'
                        email = 'admin@resourcefulbees.com'
                    }
                }
            }

        }
    }

    repositories {
        maven {
            url = rootProject.version.endsWith("-SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ENV.MAVEN_USER
                password ENV.MAVEN_PASS
            }
        }
    }
}

curseforge {
    apiKey = "${ENV.CURSE_API_KEY}"
    project {
        id = '384508'
        changelog = file('changelog.md')
        changelogType = 'markdown'
        releaseType = 'release'
        addGameVersion "${mc_version}"
        mainArtifact(jar) {
            displayName = "Resourceful Bees ${version}"
        }
    }
}
