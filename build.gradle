buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url='https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

repositories {
    //mappings
    maven { url "https://www.dogforce-games.com/maven/" }
    maven { url "https://maven.tterrag.com/" }
    maven { url "https://maven.blamejared.com" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url "https://modmaven.k-4u.nl" }
}

version = "${mod_version}"
group = "com.resourcefulbees" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Create Jar Files

//Creates the JavaDoc (useful for modders) https://en.wikipedia.org/wiki/Javadoc
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

//Packages a jar with the source files of the mod
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "snapshot", version: "${mapping}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=resourcefulbees.mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            property 'fml.earlyprogresswindow','false'

            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=resourcefulbees.mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            property 'fml.earlyprogresswindow','false'

            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            args "--mod", "resourcefulbees", "--all", "--output", "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""
            mods {
                resourcefulbees {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}" //21

    compileOnly fg.deobf("mezz.jei:jei-1.16.3:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.3:${jei_version}")

    compileOnly fg.deobf ("mcjty.theoneprobe:TheOneProbe-1.16:${top_version}:api")
    runtime fg.deobf ("mcjty.theoneprobe:TheOneProbe-1.16:${top_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "resourcefulbees",
                "Specification-Vendor": "examplemodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
