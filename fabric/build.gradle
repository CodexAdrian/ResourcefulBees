plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"

    modApi "com.teamresourceful.resourcefullib:resourcefullib-fabric-$mc_version:$rlib_version"
    modApi "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-$mc_version:$rconfig_version"
    modImplementation "software.bernie.geckolib:$geckolib_fabric_version"

    //TODO when fabric gets running we do need transitive, this was just disabled so I could not deal with updating the maven
    modImplementation "com.telepathicgrunt:Bumblezone-Fabric:$bumblezone_version" transitive false

    common(project(path: ":common", configuration: "namedElements")) transitive false
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) transitive false
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"
    archiveAppendix.set "$project.name-$mc_version"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
    archiveAppendix.set "$project.name-$mc_version"
}

jar {
    archiveClassifier.set "dev"
    archiveAppendix.set "$project.name-$mc_version"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}